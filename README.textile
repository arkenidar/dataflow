h1. Dataflow Fibers Branch

A Fibers (coroutines) branch of the "thread-based Dataflow library":http://github.com/larrytheliquid/dataflow/tree/master

See the link above for more information about Dataflow. This
particular branch is experimenting with using Fibers instead of
threads. A Fiber in Ruby 1.9 has significantly less creation and
memory costs compared to threads. On the downside, true concurrency
from multi-core processors is not realized. Nevertheless, Dataflow can
be beneficial for declarative program modeling even withou true
concurrency. 

Furthermore, "Neverblock":http://github.com/oldmoe/neverblock/tree/master
implements non-blocking IO with Fibers, making the most common case of
blocking not an issue anymore. Will non-blocking IO be enough
"asyncronous behavior"? Are the startup cost and memory advantages
worth sacrificing true native-thread concurrency? Is there a neat way
to combine fibers and threads? The purpose of this
branch is to explore these questions.
